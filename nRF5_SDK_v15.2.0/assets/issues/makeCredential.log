<debug> usbd_hid_service: usbd_init() done
<debug> nrf_ble_lesc: Initialized nrf_crypto.
<debug> nrf_ble_lesc: Initialized nrf_ble_lesc.
<debug> nrf_ble_lesc: Generating ECC key pair
<info> ble_u2f_pairing: Run as non-pairing mode
<info> fido_ble_peripheral: BLE peripheral initialized
<debug> usbd_hid_service: usbd_hid_init() done
<info> app: Diverta FIDO Authenticator application started.
<debug> ctap2_client_pin_token: PIN token generate success
<debug> ctap2_client_pin_sskey: Keypair for exchanging key generate success
<debug> fido_ble_peripheral_timer: USB HID is inactive: starting BLE peripheral
<info> fido_ble_peripheral: BLE: Fast advertising.
<debug> fido_ble_peripheral: Advertising started
<debug> usbd_hid_service: usbd_init() done
<debug> nrf_ble_lesc: Initialized nrf_crypto.
<debug> nrf_ble_lesc: Initialized nrf_ble_lesc.
<debug> nrf_ble_lesc: Generating ECC key pair
<info> ble_u2f_pairing: Run as non-pairing mode
<info> fido_ble_peripheral: BLE peripheral initialized
<debug> usbd_hid_service: usbd_hid_init() done
<info> app: Diverta FIDO Authenticator application started.
<debug> ctap2_client_pin_token: PIN token generate success
<debug> ctap2_client_pin_sskey: Keypair for exchanging key generate success
<debug> usbd_hid_service: USB power detected
<debug> usbd_hid_service: USB ready
<debug> fido_ble_peripheral_timer: USB HID is active, BLE peripheral is inactive
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003301) CMD(0x90) OPTION(0x04) LEN(1)
<debug> ctap2_cbor_authgetinfo: Encoding success (71 bytes)
<debug> hid_fido_send: INIT frame: CID(0x01003301) CMD(0x90) LEN(72)
<debug> hid_fido_send: CONT frame: CID(0x01003301) SEQ(0x00)
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003302) CMD(0x90) OPTION(0x04) LEN(1)
<debug> ctap2_cbor_authgetinfo: Encoding success (71 bytes)
<debug> hid_fido_send: INIT frame: CID(0x01003302) CMD(0x90) LEN(72)
<debug> hid_fido_send: CONT frame: CID(0x01003302) SEQ(0x00)
<debug> hid_fido_receive: INIT frame: CID(0x01003302) CMD(0x90) OPTION(0x01) LEN(159)
<debug> hid_fido_receive: CONT frame: CID(0x01003302) SEQ(0x00)
<debug> hid_fido_receive: CONT frame: CID(0x01003302) SEQ(0x01)
<error> hid_ctap2_command: authenticatorMakeCredential: failed to decode CBOR request
<debug> hid_fido_send: INIT frame: CID(0x01003302) CMD(0x90) STATUS(0x35)
<info> hid_ctap2_command: authenticatorMakeCredential end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003303) CMD(0x90) OPTION(0x04) LEN(1)
<debug> ctap2_cbor_authgetinfo: Encoding success (71 bytes)
<debug> hid_fido_send: INIT frame: CID(0x01003303) CMD(0x90) LEN(72)
<debug> hid_fido_send: CONT frame: CID(0x01003303) SEQ(0x00)
<debug> hid_fido_receive: INIT frame: CID(0x01003303) CMD(0x90) OPTION(0x06) LEN(6)
<debug> ctap2_client_pin: authenticatorClientPIN start: subcommand(0x02)
<debug> ctap2_client_pin_sskey: Keypair for exchanging key is already exist
<debug> hid_fido_send: INIT frame: CID(0x01003303) CMD(0x90) LEN(80)
<debug> ctap2_client_pin: getKeyAgreement: public key generate success
<debug> hid_fido_send: CONT frame: CID(0x01003303) SEQ(0x00)
<info> hid_ctap2_command: authenticatorClientPIN end
<debug> hid_fido_receive: INIT frame: CID(0x01003303) CMD(0x90) OPTION(0x06) LEN(170)
<debug> hid_fido_receive: CONT frame: CID(0x01003303) SEQ(0x00)
<debug> hid_fido_receive: CONT frame: CID(0x01003303) SEQ(0x01)
<debug> ctap2_client_pin: authenticatorClientPIN start: subcommand(0x03)
<debug> ctap2_client_pin: pinAuth verification success
<debug> ctap2_client_pin: setPIN: PIN hash store success
<debug> hid_fido_send: INIT frame: CID(0x01003303) CMD(0x90) STATUS(0x00)
<info> hid_ctap2_command: authenticatorClientPIN end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003304) CMD(0x90) OPTION(0x04) LEN(1)
<debug> ctap2_cbor_authgetinfo: Encoding success (71 bytes)
<debug> hid_fido_send: INIT frame: CID(0x01003304) CMD(0x90) LEN(72)
<debug> hid_fido_send: CONT frame: CID(0x01003304) SEQ(0x00)
<debug> hid_fido_receive: INIT frame: CID(0x01003304) CMD(0x90) OPTION(0x06) LEN(6)
<debug> ctap2_client_pin: authenticatorClientPIN start: subcommand(0x02)
<debug> ctap2_client_pin_sskey: Keypair for exchanging key is already exist
<debug> hid_fido_send: INIT frame: CID(0x01003304) CMD(0x90) LEN(80)
<debug> ctap2_client_pin: getKeyAgreement: public key generate success
<debug> hid_fido_send: CONT frame: CID(0x01003304) SEQ(0x00)
<info> hid_ctap2_command: authenticatorClientPIN end
<debug> hid_fido_receive: INIT frame: CID(0x01003304) CMD(0x90) OPTION(0x06) LEN(103)
<debug> hid_fido_receive: CONT frame: CID(0x01003304) SEQ(0x00)
<debug> ctap2_client_pin: authenticatorClientPIN start: subcommand(0x05)
<debug> ctap2_client_pin: getPinToken: retry counter remains 7 times
<debug> ctap2_client_pin: getPinToken: PIN code hash matching test OK
<debug> ctap2_client_pin: getPinToken: retry counter store success
<debug> hid_fido_send: INIT frame: CID(0x01003304) CMD(0x90) LEN(20)
<info> hid_ctap2_command: authenticatorClientPIN end
<debug> hid_fido_receive: INIT frame: CID(0x01003304) CMD(0x90) OPTION(0x01) LEN(284)
<debug> hid_fido_receive: CONT frame: CID(0x01003304) SEQ(0x00)
<debug> hid_fido_receive: CONT frame: CID(0x01003304) SEQ(0x01)
<debug> hid_fido_receive: CONT frame: CID(0x01003304) SEQ(0x02)
<debug> hid_fido_receive: CONT frame: CID(0x01003304) SEQ(0x03)
<debug> ctap2_make_credential: pinAuth verification success
<info> hid_ctap2_command: authenticatorMakeCredential: waiting to complete the test of user presence
<info> hid_ctap2_command: authenticatorMakeCredential: completed the test of user presence
<info> hid_ctap2_command: authenticatorMakeCredential start
<debug> u2f_crypto: u2f_crypto_sign start 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_hash_calculate() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_ecc_private_key_from_raw() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_ecdsa_sign() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign end 
<debug> u2f_crypto: u2f_crypto_create_asn1_signature start 
<debug> u2f_crypto: u2f_crypto_create_asn1_signature end 
<debug> ctap2_make_credential: sign counter registered (value=0)
<debug> hid_fido_send: INIT frame: CID(0x01003304) CMD(0x90) LEN(879)
<debug> hid_fido_send: CONT frame: CID(0x01003304) SEQ(0x00)
<debug> hid_fido_send: CONT frame: CID(0x01003304) SEQ(0x01)
<debug> hid_fido_send: CONT frame: CID(0x01003304) SEQ(0x02)
<debug> hid_fido_send: CONT frame: CID(0x01003304) SEQ(0x03)
<debug> hid_fido_send: CONT frame: CID(0x01003304) SEQ(0x04)
<debug> hid_fido_send: CONT frame: CID(0x01003304) SEQ(0x05)
<debug> hid_fido_send: CONT frame: CID(0x01003304) SEQ(0x06)
<debug> hid_fido_send: CONT frame: CID(0x01003304) SEQ(0x07)
<debug> hid_fido_send: CONT frame: CID(0x01003304) SEQ(0x08)
<debug> hid_fido_send: CONT frame: CID(0x01003304) SEQ(0x09)
<debug> hid_fido_send: CONT frame: CID(0x01003304) SEQ(0x0A)
<debug> hid_fido_send: CONT frame: CID(0x01003304) SEQ(0x0B)
<debug> hid_fido_send: CONT frame: CID(0x01003304) SEQ(0x0C)
<debug> hid_fido_send: CONT frame: CID(0x01003304) SEQ(0x0D)
<info> hid_ctap2_command: authenticatorMakeCredential end

