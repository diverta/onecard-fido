<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003301) CMD(0x90) OPTION(0x04) LEN(1)
<debug> ctap2_cbor_authgetinfo: Encoding success (85 bytes)
<debug> hid_fido_send: INIT frame: CID(0x01003301) CMD(0x90) LEN(86) STATUS(0x00)
<debug> hid_fido_send: CONT frame: CID(0x01003301) SEQ(0x00)
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003302) CMD(0x90) OPTION(0x07) LEN(1)
<info> hid_ctap2_command: authenticatorReset: waiting to complete the test of user presence
<info> hid_ctap2_command: authenticatorReset: completed the test of user presence
<info> hid_ctap2_command: authenticatorReset start
<debug> ctap2_client_pin_token: PIN token re-generate success
<debug> ctap2_client_pin_sskey: Keypair for exchanging key re-generate success
<debug> hid_ctap2_command: fido_flash_token_counter_delete completed 
<debug> hid_fido_send: INIT frame: CID(0x01003302) CMD(0x90) LEN(1) STATUS(0x00)
<info> hid_ctap2_command: authenticatorReset end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003303) CMD(0x90) OPTION(0x04) LEN(1)
<debug> ctap2_cbor_authgetinfo: Encoding success (85 bytes)
<debug> hid_fido_send: INIT frame: CID(0x01003303) CMD(0x90) LEN(86) STATUS(0x00)
<debug> hid_fido_send: CONT frame: CID(0x01003303) SEQ(0x00)
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003304) CMD(0x90) OPTION(0x07) LEN(1)
<info> hid_ctap2_command: authenticatorReset: waiting to complete the test of user presence
<info> hid_ctap2_command: authenticatorReset: completed the test of user presence
<info> hid_ctap2_command: authenticatorReset start
<debug> ctap2_client_pin_token: PIN token re-generate success
<debug> ctap2_client_pin_sskey: Keypair for exchanging key re-generate success
<debug> hid_ctap2_command: fido_flash_token_counter_delete completed 
<debug> hid_fido_send: INIT frame: CID(0x01003304) CMD(0x90) LEN(1) STATUS(0x00)
<info> hid_ctap2_command: authenticatorReset end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003305) CMD(0x90) OPTION(0x04) LEN(1)
<debug> ctap2_cbor_authgetinfo: Encoding success (85 bytes)
<debug> hid_fido_send: INIT frame: CID(0x01003305) CMD(0x90) LEN(86) STATUS(0x00)
<debug> hid_fido_send: CONT frame: CID(0x01003305) SEQ(0x00)
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003306) CMD(0x90) OPTION(0x06) LEN(6)
<debug> ctap2_client_pin: authenticatorClientPIN start: subcommand(0x02)
<debug> ctap2_client_pin_sskey: Keypair for exchanging key is already exist
<debug> hid_fido_send: INIT frame: CID(0x01003306) CMD(0x90) LEN(80) STATUS(0x00)
<debug> ctap2_client_pin: getKeyAgreement: public key generate success
<debug> hid_fido_send: CONT frame: CID(0x01003306) SEQ(0x00)
<info> hid_ctap2_command: authenticatorClientPIN end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003307) CMD(0x90) OPTION(0x01) LEN(302)
<debug> hid_fido_receive: CONT frame: CID(0x01003307) SEQ(0x00)
<debug> hid_fido_receive: CONT frame: CID(0x01003307) SEQ(0x01)
<debug> hid_fido_receive: CONT frame: CID(0x01003307) SEQ(0x02)
<debug> hid_fido_receive: CONT frame: CID(0x01003307) SEQ(0x03)
<debug> hid_fido_receive: CONT frame: CID(0x01003307) SEQ(0x04)
<info> hid_ctap2_command: authenticatorMakeCredential: waiting to complete the test of user presence
<info> hid_ctap2_command: authenticatorMakeCredential: completed the test of user presence
<info> hid_ctap2_command: authenticatorMakeCredential start
<debug> u2f_crypto: u2f_crypto_sign start 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_hash_calculate() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_ecc_private_key_from_raw() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_ecdsa_sign() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign end 
<debug> u2f_crypto: u2f_crypto_create_asn1_signature start 
<debug> u2f_crypto: u2f_crypto_create_asn1_signature end 
<debug> ctap2_make_credential: sign counter registered (value=0)
<debug> hid_fido_send: INIT frame: CID(0x01003307) CMD(0x90) LEN(943) STATUS(0x00)
<debug> hid_fido_send: CONT frame: CID(0x01003307) SEQ(0x00)
<debug> hid_fido_send: CONT frame: CID(0x01003307) SEQ(0x01)
<debug> hid_fido_send: CONT frame: CID(0x01003307) SEQ(0x02)
<debug> hid_fido_send: CONT frame: CID(0x01003307) SEQ(0x03)
<debug> hid_fido_send: CONT frame: CID(0x01003307) SEQ(0x04)
<debug> hid_fido_send: CONT frame: CID(0x01003307) SEQ(0x05)
<debug> hid_fido_send: CONT frame: CID(0x01003307) SEQ(0x06)
<debug> hid_fido_send: CONT frame: CID(0x01003307) SEQ(0x07)
<debug> hid_fido_send: CONT frame: CID(0x01003307) SEQ(0x08)
<debug> hid_fido_send: CONT frame: CID(0x01003307) SEQ(0x09)
<debug> hid_fido_send: CONT frame: CID(0x01003307) SEQ(0x0A)
<debug> hid_fido_send: CONT frame: CID(0x01003307) SEQ(0x0B)
<debug> hid_fido_send: CONT frame: CID(0x01003307) SEQ(0x0C)
<debug> hid_fido_send: CONT frame: CID(0x01003307) SEQ(0x0D)
<debug> hid_fido_send: CONT frame: CID(0x01003307) SEQ(0x0E)
<debug> hid_fido_send: CONT frame: CID(0x01003307) SEQ(0x0F)
<info> hid_ctap2_command: authenticatorMakeCredential end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003308) CMD(0x90) OPTION(0x06) LEN(6)
<debug> ctap2_client_pin: authenticatorClientPIN start: subcommand(0x02)
<debug> ctap2_client_pin_sskey: Keypair for exchanging key is already exist
<debug> hid_fido_send: INIT frame: CID(0x01003308) CMD(0x90) LEN(80) STATUS(0x00)
<debug> ctap2_client_pin: getKeyAgreement: public key generate success
<debug> hid_fido_send: CONT frame: CID(0x01003308) SEQ(0x00)
<info> hid_ctap2_command: authenticatorClientPIN end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003309) CMD(0x90) OPTION(0x02) LEN(334)
<debug> hid_fido_receive: CONT frame: CID(0x01003309) SEQ(0x00)
<debug> hid_fido_receive: CONT frame: CID(0x01003309) SEQ(0x01)
<debug> hid_fido_receive: CONT frame: CID(0x01003309) SEQ(0x02)
<debug> hid_fido_receive: CONT frame: CID(0x01003309) SEQ(0x03)
<debug> hid_fido_receive: CONT frame: CID(0x01003309) SEQ(0x04)
<info> hid_ctap2_command: authenticatorGetAssertion: waiting to complete the test of user presence
<info> hid_ctap2_command: authenticatorGetAssertion: completed the test of user presence
<info> hid_ctap2_command: authenticatorGetAssertion start
<debug> ctap2_get_assertion: sign counter found (value=0)
<debug> u2f_crypto: u2f_crypto_sign start 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_hash_calculate() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_ecc_private_key_from_raw() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_ecdsa_sign() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign end 
<debug> u2f_crypto: u2f_crypto_create_asn1_signature start 
<debug> u2f_crypto: u2f_crypto_create_asn1_signature end 
<debug> ctap2_get_assertion: sign counter updated (value=1)
<debug> hid_fido_send: INIT frame: CID(0x01003309) CMD(0x90) LEN(300) STATUS(0x00)
<debug> hid_fido_send: CONT frame: CID(0x01003309) SEQ(0x00)
<debug> hid_fido_send: CONT frame: CID(0x01003309) SEQ(0x01)
<debug> hid_fido_send: CONT frame: CID(0x01003309) SEQ(0x02)
<debug> hid_fido_send: CONT frame: CID(0x01003309) SEQ(0x03)
<debug> hid_fido_send: CONT frame: CID(0x01003309) SEQ(0x04)
<info> hid_ctap2_command: authenticatorGetAssertion end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x0100330A) CMD(0x90) OPTION(0x06) LEN(6)
<debug> ctap2_client_pin: authenticatorClientPIN start: subcommand(0x02)
<debug> ctap2_client_pin_sskey: Keypair for exchanging key is already exist
<debug> hid_fido_send: INIT frame: CID(0x0100330A) CMD(0x90) LEN(80) STATUS(0x00)
<debug> ctap2_client_pin: getKeyAgreement: public key generate success
<debug> hid_fido_send: CONT frame: CID(0x0100330A) SEQ(0x00)
<info> hid_ctap2_command: authenticatorClientPIN end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x0100330B) CMD(0x90) OPTION(0x02) LEN(334)
<debug> hid_fido_receive: CONT frame: CID(0x0100330B) SEQ(0x00)
<debug> hid_fido_receive: CONT frame: CID(0x0100330B) SEQ(0x01)
<debug> hid_fido_receive: CONT frame: CID(0x0100330B) SEQ(0x02)
<debug> hid_fido_receive: CONT frame: CID(0x0100330B) SEQ(0x03)
<debug> hid_fido_receive: CONT frame: CID(0x0100330B) SEQ(0x04)
<info> hid_ctap2_command: authenticatorGetAssertion: waiting to complete the test of user presence
<info> hid_ctap2_command: authenticatorGetAssertion: completed the test of user presence
<info> hid_ctap2_command: authenticatorGetAssertion start
<debug> ctap2_get_assertion: sign counter found (value=1)
<debug> u2f_crypto: u2f_crypto_sign start 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_hash_calculate() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_ecc_private_key_from_raw() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_ecdsa_sign() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign end 
<debug> u2f_crypto: u2f_crypto_create_asn1_signature start 
<debug> u2f_crypto: u2f_crypto_create_asn1_signature end 
<debug> ctap2_get_assertion: sign counter updated (value=2)
<debug> hid_fido_send: INIT frame: CID(0x0100330B) CMD(0x90) LEN(300) STATUS(0x00)
<debug> hid_fido_send: CONT frame: CID(0x0100330B) SEQ(0x00)
<debug> hid_fido_send: CONT frame: CID(0x0100330B) SEQ(0x01)
<debug> hid_fido_send: CONT frame: CID(0x0100330B) SEQ(0x02)
<debug> hid_fido_send: CONT frame: CID(0x0100330B) SEQ(0x03)
<debug> hid_fido_send: CONT frame: CID(0x0100330B) SEQ(0x04)
<info> hid_ctap2_command: authenticatorGetAssertion end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x0100330C) CMD(0x90) OPTION(0x06) LEN(6)
<debug> ctap2_client_pin: authenticatorClientPIN start: subcommand(0x02)
<debug> ctap2_client_pin_sskey: Keypair for exchanging key is already exist
<debug> hid_fido_send: INIT frame: CID(0x0100330C) CMD(0x90) LEN(80) STATUS(0x00)
<debug> ctap2_client_pin: getKeyAgreement: public key generate success
<debug> hid_fido_send: CONT frame: CID(0x0100330C) SEQ(0x00)
<info> hid_ctap2_command: authenticatorClientPIN end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x0100330D) CMD(0x90) OPTION(0x02) LEN(366)
<debug> hid_fido_receive: CONT frame: CID(0x0100330D) SEQ(0x00)
<debug> hid_fido_receive: CONT frame: CID(0x0100330D) SEQ(0x01)
<debug> hid_fido_receive: CONT frame: CID(0x0100330D) SEQ(0x02)
<debug> hid_fido_receive: CONT frame: CID(0x0100330D) SEQ(0x03)
<debug> hid_fido_receive: CONT frame: CID(0x0100330D) SEQ(0x04)
<debug> hid_fido_receive: CONT frame: CID(0x0100330D) SEQ(0x05)
<info> hid_ctap2_command: authenticatorGetAssertion: waiting to complete the test of user presence
<info> hid_ctap2_command: authenticatorGetAssertion: completed the test of user presence
<info> hid_ctap2_command: authenticatorGetAssertion start
<debug> ctap2_get_assertion: sign counter found (value=2)
<debug> u2f_crypto: u2f_crypto_sign start 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_hash_calculate() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_ecc_private_key_from_raw() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_ecdsa_sign() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign end 
<debug> u2f_crypto: u2f_crypto_create_asn1_signature start 
<debug> u2f_crypto: u2f_crypto_create_asn1_signature end 
<debug> ctap2_get_assertion: sign counter updated (value=3)
<debug> hid_fido_send: INIT frame: CID(0x0100330D) CMD(0x90) LEN(331) STATUS(0x00)
<debug> hid_fido_send: CONT frame: CID(0x0100330D) SEQ(0x00)
<debug> hid_fido_send: CONT frame: CID(0x0100330D) SEQ(0x01)
<debug> hid_fido_send: CONT frame: CID(0x0100330D) SEQ(0x02)
<debug> hid_fido_send: CONT frame: CID(0x0100330D) SEQ(0x03)
<debug> hid_fido_send: CONT frame: CID(0x0100330D) SEQ(0x04)
<info> hid_ctap2_command: authenticatorGetAssertion end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x0100330E) CMD(0x90) OPTION(0x06) LEN(6)
<debug> ctap2_client_pin: authenticatorClientPIN start: subcommand(0x02)
<debug> ctap2_client_pin_sskey: Keypair for exchanging key is already exist
<debug> hid_fido_send: INIT frame: CID(0x0100330E) CMD(0x90) LEN(80) STATUS(0x00)
<debug> ctap2_client_pin: getKeyAgreement: public key generate success
<debug> hid_fido_send: CONT frame: CID(0x0100330E) SEQ(0x00)
<info> hid_ctap2_command: authenticatorClientPIN end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x0100330F) CMD(0x90) OPTION(0x02) LEN(366)
<debug> hid_fido_receive: CONT frame: CID(0x0100330F) SEQ(0x00)
<debug> hid_fido_receive: CONT frame: CID(0x0100330F) SEQ(0x01)
<debug> hid_fido_receive: CONT frame: CID(0x0100330F) SEQ(0x02)
<debug> hid_fido_receive: CONT frame: CID(0x0100330F) SEQ(0x03)
<debug> hid_fido_receive: CONT frame: CID(0x0100330F) SEQ(0x04)
<debug> hid_fido_receive: CONT frame: CID(0x0100330F) SEQ(0x05)
<info> hid_ctap2_command: authenticatorGetAssertion: waiting to complete the test of user presence
<info> hid_ctap2_command: authenticatorGetAssertion: completed the test of user presence
<info> hid_ctap2_command: authenticatorGetAssertion start
<debug> ctap2_get_assertion: sign counter found (value=3)
<debug> u2f_crypto: u2f_crypto_sign start 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_hash_calculate() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_ecc_private_key_from_raw() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_ecdsa_sign() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign end 
<debug> u2f_crypto: u2f_crypto_create_asn1_signature start 
<debug> u2f_crypto: u2f_crypto_create_asn1_signature end 
<debug> ctap2_get_assertion: sign counter updated (value=4)
<debug> hid_fido_send: INIT frame: CID(0x0100330F) CMD(0x90) LEN(332) STATUS(0x00)
<debug> hid_fido_send: CONT frame: CID(0x0100330F) SEQ(0x00)
<debug> hid_fido_send: CONT frame: CID(0x0100330F) SEQ(0x01)
<debug> hid_fido_send: CONT frame: CID(0x0100330F) SEQ(0x02)
<debug> hid_fido_send: CONT frame: CID(0x0100330F) SEQ(0x03)
<debug> hid_fido_send: CONT frame: CID(0x0100330F) SEQ(0x04)
<info> hid_ctap2_command: authenticatorGetAssertion end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003310) CMD(0x90) OPTION(0x06) LEN(6)
<debug> ctap2_client_pin: authenticatorClientPIN start: subcommand(0x02)
<debug> ctap2_client_pin_sskey: Keypair for exchanging key is already exist
<debug> hid_fido_send: INIT frame: CID(0x01003310) CMD(0x90) LEN(80) STATUS(0x00)
<debug> ctap2_client_pin: getKeyAgreement: public key generate success
<debug> hid_fido_send: CONT frame: CID(0x01003310) SEQ(0x00)
<info> hid_ctap2_command: authenticatorClientPIN end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003311) CMD(0x90) OPTION(0x02) LEN(366)
<debug> hid_fido_receive: CONT frame: CID(0x01003311) SEQ(0x00)
<debug> hid_fido_receive: CONT frame: CID(0x01003311) SEQ(0x01)
<debug> hid_fido_receive: CONT frame: CID(0x01003311) SEQ(0x02)
<debug> hid_fido_receive: CONT frame: CID(0x01003311) SEQ(0x03)
<debug> hid_fido_receive: CONT frame: CID(0x01003311) SEQ(0x04)
<debug> hid_fido_receive: CONT frame: CID(0x01003311) SEQ(0x05)
<info> hid_ctap2_command: authenticatorGetAssertion: waiting to complete the test of user presence
<info> hid_ctap2_command: authenticatorGetAssertion: completed the test of user presence
<info> hid_ctap2_command: authenticatorGetAssertion start
<debug> ctap2_get_assertion: sign counter found (value=4)
<debug> u2f_crypto: u2f_crypto_sign start 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_hash_calculate() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_ecc_private_key_from_raw() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_ecdsa_sign() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign end 
<debug> u2f_crypto: u2f_crypto_create_asn1_signature start 
<debug> u2f_crypto: u2f_crypto_create_asn1_signature end 
<debug> ctap2_get_assertion: sign counter updated (value=5)
<debug> hid_fido_send: INIT frame: CID(0x01003311) CMD(0x90) LEN(332) STATUS(0x00)
<debug> hid_fido_send: CONT frame: CID(0x01003311) SEQ(0x00)
<debug> hid_fido_send: CONT frame: CID(0x01003311) SEQ(0x01)
<debug> hid_fido_send: CONT frame: CID(0x01003311) SEQ(0x02)
<debug> hid_fido_send: CONT frame: CID(0x01003311) SEQ(0x03)
<debug> hid_fido_send: CONT frame: CID(0x01003311) SEQ(0x04)
<info> hid_ctap2_command: authenticatorGetAssertion end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003312) CMD(0x90) OPTION(0x06) LEN(6)
<debug> ctap2_client_pin: authenticatorClientPIN start: subcommand(0x02)
<debug> ctap2_client_pin_sskey: Keypair for exchanging key is already exist
<debug> hid_fido_send: INIT frame: CID(0x01003312) CMD(0x90) LEN(80) STATUS(0x00)
<debug> ctap2_client_pin: getKeyAgreement: public key generate success
<debug> hid_fido_send: CONT frame: CID(0x01003312) SEQ(0x00)
<info> hid_ctap2_command: authenticatorClientPIN end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003313) CMD(0x90) OPTION(0x02) LEN(366)
<debug> hid_fido_receive: CONT frame: CID(0x01003313) SEQ(0x00)
<debug> hid_fido_receive: CONT frame: CID(0x01003313) SEQ(0x01)
<debug> hid_fido_receive: CONT frame: CID(0x01003313) SEQ(0x02)
<debug> hid_fido_receive: CONT frame: CID(0x01003313) SEQ(0x03)
<debug> hid_fido_receive: CONT frame: CID(0x01003313) SEQ(0x04)
<debug> hid_fido_receive: CONT frame: CID(0x01003313) SEQ(0x05)
<info> hid_ctap2_command: authenticatorGetAssertion: waiting to complete the test of user presence
<info> hid_ctap2_command: authenticatorGetAssertion: completed the test of user presence
<info> hid_ctap2_command: authenticatorGetAssertion start
<debug> ctap2_get_assertion: sign counter found (value=5)
<debug> u2f_crypto: u2f_crypto_sign start 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_hash_calculate() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_ecc_private_key_from_raw() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_ecdsa_sign() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign end 
<debug> u2f_crypto: u2f_crypto_create_asn1_signature start 
<debug> u2f_crypto: u2f_crypto_create_asn1_signature end 
<debug> ctap2_get_assertion: sign counter updated (value=6)
<debug> hid_fido_send: INIT frame: CID(0x01003313) CMD(0x90) LEN(332) STATUS(0x00)
<debug> hid_fido_send: CONT frame: CID(0x01003313) SEQ(0x00)
<debug> hid_fido_send: CONT frame: CID(0x01003313) SEQ(0x01)
<debug> hid_fido_send: CONT frame: CID(0x01003313) SEQ(0x02)
<debug> hid_fido_send: CONT frame: CID(0x01003313) SEQ(0x03)
<debug> hid_fido_send: CONT frame: CID(0x01003313) SEQ(0x04)
<info> hid_ctap2_command: authenticatorGetAssertion end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003314) CMD(0x90) OPTION(0x06) LEN(6)
<debug> ctap2_client_pin: authenticatorClientPIN start: subcommand(0x02)
<debug> ctap2_client_pin_sskey: Keypair for exchanging key is already exist
<debug> hid_fido_send: INIT frame: CID(0x01003314) CMD(0x90) LEN(80) STATUS(0x00)
<debug> ctap2_client_pin: getKeyAgreement: public key generate success
<debug> hid_fido_send: CONT frame: CID(0x01003314) SEQ(0x00)
<info> hid_ctap2_command: authenticatorClientPIN end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003315) CMD(0x90) OPTION(0x02) LEN(366)
<debug> hid_fido_receive: CONT frame: CID(0x01003315) SEQ(0x00)
<debug> hid_fido_receive: CONT frame: CID(0x01003315) SEQ(0x01)
<debug> hid_fido_receive: CONT frame: CID(0x01003315) SEQ(0x02)
<debug> hid_fido_receive: CONT frame: CID(0x01003315) SEQ(0x03)
<debug> hid_fido_receive: CONT frame: CID(0x01003315) SEQ(0x04)
<debug> hid_fido_receive: CONT frame: CID(0x01003315) SEQ(0x05)
<info> hid_ctap2_command: authenticatorGetAssertion: waiting to complete the test of user presence
<info> hid_ctap2_command: authenticatorGetAssertion: completed the test of user presence
<info> hid_ctap2_command: authenticatorGetAssertion start
<debug> ctap2_get_assertion: sign counter found (value=6)
<debug> u2f_crypto: u2f_crypto_sign start 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_hash_calculate() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_ecc_private_key_from_raw() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_ecdsa_sign() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign end 
<debug> u2f_crypto: u2f_crypto_create_asn1_signature start 
<debug> u2f_crypto: u2f_crypto_create_asn1_signature end 
<debug> ctap2_get_assertion: sign counter updated (value=7)
<debug> hid_fido_send: INIT frame: CID(0x01003315) CMD(0x90) LEN(331) STATUS(0x00)
<debug> hid_fido_send: CONT frame: CID(0x01003315) SEQ(0x00)
<debug> hid_fido_send: CONT frame: CID(0x01003315) SEQ(0x01)
<debug> hid_fido_send: CONT frame: CID(0x01003315) SEQ(0x02)
<debug> hid_fido_send: CONT frame: CID(0x01003315) SEQ(0x03)
<debug> hid_fido_send: CONT frame: CID(0x01003315) SEQ(0x04)
<info> hid_ctap2_command: authenticatorGetAssertion end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003316) CMD(0x90) OPTION(0x01) LEN(314)
<debug> hid_fido_receive: CONT frame: CID(0x01003316) SEQ(0x00)
<debug> hid_fido_receive: CONT frame: CID(0x01003316) SEQ(0x01)
<debug> hid_fido_receive: CONT frame: CID(0x01003316) SEQ(0x02)
<debug> hid_fido_receive: CONT frame: CID(0x01003316) SEQ(0x03)
<debug> hid_fido_receive: CONT frame: CID(0x01003316) SEQ(0x04)
<error> hid_ctap2_command: authenticatorMakeCredential: failed to decode CBOR request
<debug> hid_fido_send: INIT frame: CID(0x01003316) CMD(0x90) LEN(1) STATUS(0x13)
<info> hid_ctap2_command: authenticatorMakeCredential end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003317) CMD(0x90) OPTION(0x06) LEN(6)
<debug> ctap2_client_pin: authenticatorClientPIN start: subcommand(0x02)
<debug> ctap2_client_pin_sskey: Keypair for exchanging key is already exist
<debug> hid_fido_send: INIT frame: CID(0x01003317) CMD(0x90) LEN(80) STATUS(0x00)
<debug> ctap2_client_pin: getKeyAgreement: public key generate success
<debug> hid_fido_send: CONT frame: CID(0x01003317) SEQ(0x00)
<info> hid_ctap2_command: authenticatorClientPIN end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003318) CMD(0x90) OPTION(0x02) LEN(317)
<debug> hid_fido_receive: CONT frame: CID(0x01003318) SEQ(0x00)
<debug> hid_fido_receive: CONT frame: CID(0x01003318) SEQ(0x01)
<debug> hid_fido_receive: CONT frame: CID(0x01003318) SEQ(0x02)
<debug> hid_fido_receive: CONT frame: CID(0x01003318) SEQ(0x03)
<debug> hid_fido_receive: CONT frame: CID(0x01003318) SEQ(0x04)
<error> hid_ctap2_command: authenticatorGetAssertion: failed to decode CBOR request
<debug> hid_fido_send: INIT frame: CID(0x01003318) CMD(0x90) LEN(1) STATUS(0x03)
<info> hid_ctap2_command: authenticatorGetAssertion end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x01003319) CMD(0x90) OPTION(0x06) LEN(6)
<debug> ctap2_client_pin: authenticatorClientPIN start: subcommand(0x02)
<debug> ctap2_client_pin_sskey: Keypair for exchanging key is already exist
<debug> hid_fido_send: INIT frame: CID(0x01003319) CMD(0x90) LEN(80) STATUS(0x00)
<debug> ctap2_client_pin: getKeyAgreement: public key generate success
<debug> hid_fido_send: CONT frame: CID(0x01003319) SEQ(0x00)
<info> hid_ctap2_command: authenticatorClientPIN end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x0100331A) CMD(0x90) OPTION(0x02) LEN(334)
<debug> hid_fido_receive: CONT frame: CID(0x0100331A) SEQ(0x00)
<debug> hid_fido_receive: CONT frame: CID(0x0100331A) SEQ(0x01)
<debug> hid_fido_receive: CONT frame: CID(0x0100331A) SEQ(0x02)
<debug> hid_fido_receive: CONT frame: CID(0x0100331A) SEQ(0x03)
<debug> hid_fido_receive: CONT frame: CID(0x0100331A) SEQ(0x04)
<info> hid_ctap2_command: authenticatorGetAssertion: waiting to complete the test of user presence
<info> hid_ctap2_command: authenticatorGetAssertion: completed the test of user presence
<info> hid_ctap2_command: authenticatorGetAssertion start
<debug> ctap2_get_assertion: sign counter found (value=7)
<debug> u2f_crypto: u2f_crypto_sign start 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_hash_calculate() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_ecc_private_key_from_raw() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign: nrf_crypto_ecdsa_sign() returns 0x00 
<debug> u2f_crypto: u2f_crypto_sign end 
<debug> u2f_crypto: u2f_crypto_create_asn1_signature start 
<debug> u2f_crypto: u2f_crypto_create_asn1_signature end 
<debug> ctap2_get_assertion: sign counter updated (value=8)
<debug> hid_fido_send: INIT frame: CID(0x0100331A) CMD(0x90) LEN(300) STATUS(0x00)
<debug> hid_fido_send: CONT frame: CID(0x0100331A) SEQ(0x00)
<debug> hid_fido_send: CONT frame: CID(0x0100331A) SEQ(0x01)
<debug> hid_fido_send: CONT frame: CID(0x0100331A) SEQ(0x02)
<debug> hid_fido_send: CONT frame: CID(0x0100331A) SEQ(0x03)
<debug> hid_fido_send: CONT frame: CID(0x0100331A) SEQ(0x04)
<info> hid_ctap2_command: authenticatorGetAssertion end
<debug> hid_fido_receive: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(8)
<debug> hid_fido_send: INIT frame: CID(0xFFFFFFFF) CMD(0x86) LEN(17)
<info> hid_fido_command: CTAPHID_INIT end
<debug> hid_fido_receive: INIT frame: CID(0x0100331B) CMD(0x90) OPTION(0x07) LEN(1)
<info> hid_ctap2_command: authenticatorReset: waiting to complete the test of user presence
<info> hid_ctap2_command: authenticatorReset: completed the test of user presence
<info> hid_ctap2_command: authenticatorReset start
<debug> ctap2_client_pin_token: PIN token re-generate success
<debug> ctap2_client_pin_sskey: Keypair for exchanging key re-generate success
<debug> hid_ctap2_command: fido_flash_token_counter_delete completed 
<debug> hid_fido_send: INIT frame: CID(0x0100331B) CMD(0x90) LEN(1) STATUS(0x00)
<info> hid_ctap2_command: authenticatorReset end

