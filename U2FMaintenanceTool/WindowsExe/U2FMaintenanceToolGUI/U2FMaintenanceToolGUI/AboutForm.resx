<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MAAAAABJRU5ErkJggg==
</value>
  </data>
</root>